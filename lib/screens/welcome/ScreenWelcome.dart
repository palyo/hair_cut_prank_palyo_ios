import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:flutter_svg/svg.dart';import 'package:get/get_core/src/get_main.dart';import 'package:get/get_instance/get_instance.dart';import 'package:get/get_navigation/get_navigation.dart';import 'package:get/get_state_manager/src/rx_flutter/rx_obx_widget.dart';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'package:prankers/adModule/AdManager.dart';import 'package:prankers/adModule/InterAd.dart';import 'package:prankers/adModule/NativeShimmer.dart';import 'package:prankers/adModule/OtherNativeAd.dart';import 'package:prankers/extensions/app_colors.dart';import 'package:prankers/extensions/app_text_styles.dart';import 'package:prankers/extensions/screen_size.dart';import 'package:prankers/languages/I10n/app_localizations.dart';import 'package:prankers/provider/MainController.dart';import 'package:prankers/screens/ScreenCategory.dart';import 'package:prankers/screens/premium/ScreenPremium.dart';import 'package:prankers/screens/welcome/SelectableChip.dart';import 'package:shared_preferences/shared_preferences.dart';class ScreenWelcome extends StatefulWidget {  const ScreenWelcome({super.key});  @override  State<ScreenWelcome> createState() => _ScreenWelcomeState();}class _ScreenWelcomeState extends State<ScreenWelcome> {  final controller = Get.find<MainController>();  AdWidget? _adWidget;  List<String> selectedItems = [];  @override  void initState() {    super.initState();    _loadAd();  }  Future<void> _loadAd() async {    if (controller.isPremium.value == false && AdManager.instance?.config?.isAdStatus == true) {      OtherNativeAd.instance.loadSmallAdWithCallback((loadedAd) {        if (mounted && loadedAd != null) {          setState(() {            _adWidget = AdWidget(ad: loadedAd);          });        }      });    }  }  @override  Widget build(BuildContext context) {    List<String> categories = [AppLocalizations        .of(context)        ?.category_hair_clipper ?? '',      AppLocalizations          .of(context)          ?.category_hair_cut ?? '',      AppLocalizations          .of(context)          ?.category_taser ?? '',      AppLocalizations          .of(context)          ?.category_gun ?? '',      AppLocalizations          .of(context)          ?.category_fart ?? '',      AppLocalizations          .of(context)          ?.category_bomb_sound ?? '',      AppLocalizations          .of(context)          ?.category_animals ?? '',      AppLocalizations          .of(context)          ?.category_air_horn ?? '',      AppLocalizations          .of(context)          ?.category_horror_sound ?? '',      AppLocalizations          .of(context)          ?.category_police_siren ?? ''    ];    return Obx(() {      return AnnotatedRegion<SystemUiOverlayStyle>(          value: SystemUiOverlayStyle(            statusBarColor: Colors.transparent,            statusBarIconBrightness: Brightness.light,            statusBarBrightness: Brightness.light,          ),child: Scaffold(        backgroundColor: AppColors.background(context),        body: SafeArea(          child: Column(            mainAxisSize: MainAxisSize.min,            crossAxisAlignment: CrossAxisAlignment.center,            mainAxisAlignment: MainAxisAlignment.center,            children: [              SvgPicture.asset(                'assets/icons/ic_heart.svg',                width: context.isTabletSize ? 120.sp : 64.sp,                height: context.isTabletSize ? 120.sp : 64.sp,                colorFilter: ColorFilter.mode(Colors.red, BlendMode.srcIn),              ),              Text(AppLocalizations                  .of(context)                  ?.title_category_screen ?? '', style: AppTextStyles.headline1(context)),              Text(AppLocalizations                  .of(context)                  ?.body_category_screen ?? '', textAlign: TextAlign.center, style: AppTextStyles.bodyText1(context)),              SizedBox(height: 56.sp),              Expanded(                child: Center(                  child: Padding(                    padding: EdgeInsets.symmetric(horizontal: 12.sp),                    child: Wrap(                      spacing: 12.0,                      runSpacing: -4.0,                      crossAxisAlignment: WrapCrossAlignment.center,                      alignment: WrapAlignment.center,                      direction: Axis.horizontal,                      clipBehavior: Clip.antiAlias,                      children:                      categories.map((item) {                        final label = item;                        return SelectableChip(                          label: label,                          initiallySelected: selectedItems.contains(label),                          onSelected: (isSelected) {                            if (isSelected) {                              selectedItems.add(label);                            } else {                              selectedItems.remove(label);                            }                          },                        );                      }).toList(),                    ),                  ),                ),              ),              SizedBox(height: 56.sp),              TextButton(                onPressed: () async {                  _saveSelectedCategories();                  InterAd().showInitialFlowAd(context, () {                    if (controller.isPremium.value == false) {                      Get.off(ScreenPremium());                    } else {                      Get.off(ScreenCategory());                    }                  });                },                style: TextButton.styleFrom(                  foregroundColor: AppColors.accent(context),                  backgroundColor: AppColors.background(context),                  padding: EdgeInsets.symmetric(horizontal: 12.sp, vertical: 8.sp),                ).copyWith(overlayColor: WidgetStateProperty.all(AppColors.accent(context).withAlpha(0))),                child: Text(AppLocalizations                    .of(context)                    ?.action_got_it ?? '', style: AppTextStyles.headline1_5(context).copyWith(color: AppColors.accent(context), fontWeight: FontWeight.w600)),              ),              TextButton(                onPressed: () async {                  InterAd().showInitialFlowAd(context, () {                    if (controller.isPremium.value == false) {                      Get.off(ScreenPremium());                    } else {                      Get.off(ScreenCategory());                    }                  });                },                style: TextButton.styleFrom(                  foregroundColor: AppColors.accent(context),                  backgroundColor: AppColors.background(context),                  padding: EdgeInsets.only(left: 12.sp, right: 12.sp, bottom: 12.sp),                ).copyWith(overlayColor: WidgetStateProperty.all(AppColors.accent(context).withAlpha(0))),                child: Text(AppLocalizations                    .of(context)                    ?.action_remind_later ?? '', style: AppTextStyles.bodyText2(context)),              ),              SizedBox(height: 56.sp),              if (controller.isPremium.value == false && AdManager.instance?.config?.isAdStatus == true) ...[                SizedBox(height: 134, width: context.screenWidth, child: _adWidget ?? buildSmallAd(context)),              ],            ],          ),        ),      ));    });  }  Future<void> _saveSelectedCategories() async {    final prefs = await SharedPreferences.getInstance();    // Format: ('Cars','Flower')    final formatted = "(${selectedItems.map((e) => "'$e'").join(",")})";    await prefs.setString("selected_categories", formatted);  }  void toggleSelection(String itemName) {    setState(() {      if (selectedItems.contains(itemName)) {        selectedItems.remove(itemName);      } else {        selectedItems.add(itemName);      }    });  }}