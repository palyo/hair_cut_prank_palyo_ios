import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get_core/src/get_main.dart';import 'package:get/get_instance/get_instance.dart';import 'package:get/get_navigation/get_navigation.dart';import 'package:get/get_state_manager/src/rx_flutter/rx_obx_widget.dart';import 'package:onesignal_flutter/onesignal_flutter.dart';import 'package:prankers/adModule/AdManager.dart';import 'package:prankers/adModule/AppOpenAdManager.dart';import 'package:prankers/adModule/InterAd.dart';import 'package:prankers/adModule/LanguageNativeAd.dart';import 'package:prankers/adModule/OnboardingNativeAd.dart';import 'package:prankers/adModule/OtherNativeAd.dart';import 'package:prankers/api/ApiService.dart';import 'package:prankers/extensions/app_colors.dart';import 'package:prankers/extensions/app_text_styles.dart';import 'package:prankers/extensions/screen_size.dart';import 'package:prankers/languages/I10n/app_localizations.dart';import 'package:prankers/provider/MainController.dart';import 'package:prankers/screens/ScreenCategory.dart';import 'package:prankers/screens/ScreenLanguage.dart';import 'package:prankers/screens/ScreenOnboarding.dart';import 'package:shared_preferences/shared_preferences.dart';class ScreenSplash extends StatefulWidget {  const ScreenSplash({super.key});  @override  State<ScreenSplash> createState() => _ScreenSplashState();}class _ScreenSplashState extends State<ScreenSplash> {  final controller = Get.find<MainController>();  @override  void initState() {    super.initState();    waitForSubscriptionReady();    goto();  }  Future<bool> isAdConfigSuccess() async {    final ApiService apiService = ApiService();    var isSuccess = await apiService.fetchAdConfig("ios_05_prankapp");    return isSuccess;  }  Future<void> goto() async {    if (await isAdConfigSuccess()) {      final SharedPreferences prefs = await SharedPreferences.getInstance();      var isPremium = controller.isPremium.value;      if (isPremium == false && AdManager.instance?.config?.isAdStatus == true) {        await AppOpenAdManager().preloadAd();        if (prefs.getBool("is_language_enabled") ?? true) {          await LanguageNativeAd.instance.init(context);        } else if (prefs.getBool("is_intro_enabled") ?? true) {          await OnboardingNativeAd.instance.init(context);        }        await OtherNativeAd.instance.init(context);        await InterAd().preloadAd();      }      Future.delayed(const Duration(seconds: 5), () async {        InterAd().showInitialFlowAd(context, () {          if (isPremium == true) {            Get.off(const ScreenCategory());          } else if (prefs.getBool("is_language_enabled") ?? true) {            Get.off(ScreenLanguage(isSettings: false));          } else if (prefs.getBool("is_intro_enabled") ?? true) {            Get.off(const ScreenOnBoarding());          } else {            Get.off(const ScreenCategory());          }        });      });    }  }  Future<void> waitForSubscriptionReady() async {    while (true) {      try {        final id = await OneSignal.User.pushSubscription.id;        final optedIn = await OneSignal.User.pushSubscription.optedIn;        if (id != null && optedIn == true) {          print("✅ Push ID: $id");          print("✅ Opted in: $optedIn");          break; // ✅ Exit loop only if both conditions are met        }      } catch (e) {        print("⚠️ Error while checking subscription: $e");      }      print("⏳ Waiting for OneSignal to register device...");      await Future.delayed(Duration(seconds: 1));    }  }  @override  Widget build(BuildContext context) {    return Obx(() {      return Scaffold(        backgroundColor: AppColors.background(context),        body: Stack(          children: [            Image.asset(              'assets/ic_splash_background.webp',              fit: BoxFit.cover,              width: context.screenWidth,            ),            Center(              child: Padding(                padding: EdgeInsets.symmetric(horizontal: 24.sp),                child: Image.asset(                  'assets/ic_splash_icon.webp',                  fit: BoxFit.contain,                ),              ),            ),            Positioned(              bottom: 12.sp,              left: 12.sp,              right: 12.sp,              child: SafeArea(                child: Column(                  mainAxisSize: MainAxisSize.min,                  children: [                    Text(                      AppLocalizations.of(context)?.ad_warning ?? '',                      style: AppTextStyles.bodyText3(                        context,                      ).copyWith(color: AppColors.accentText(context)),                    ),                    SizedBox(height: 12.sp),                    Center(                      child: SizedBox(                        width: 180.sp,                        height: 3.sp,                        child: LinearProgressIndicator(                          color: AppColors.primary(context),                          backgroundColor: AppColors.primary(                            context,                          ).withAlpha(10),                          minHeight: 3.sp,                        ),                      ),                    ),                  ],                ),              ),            ),          ],        ),      );    });  }}