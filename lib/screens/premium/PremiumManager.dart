import 'package:get/get_core/src/get_main.dart';import 'package:get/get_instance/get_instance.dart';import 'package:in_app_purchase/in_app_purchase.dart';import '../../provider/MainController.dart';class PremiumManager {  static final PremiumManager instance = PremiumManager._internal();  final controller = Get.find<MainController>();  PremiumManager._internal();  bool isPremium = false;  final Set<String> premiumProductIds = {'HairPrankWeekly', 'HairPrankYearly'};  Future<void> checkIfPremiumUser() async {    final bool available = await InAppPurchase.instance.isAvailable();    if (!available) {      isPremium = controller.isPremium.value;      return;    }    InAppPurchase.instance.purchaseStream.listen(      (List<PurchaseDetails> purchaseDetailsList) async {        for (final purchaseDetails in purchaseDetailsList) {          if ((purchaseDetails.status == PurchaseStatus.purchased ||                  purchaseDetails.status == PurchaseStatus.restored) &&              premiumProductIds.contains(purchaseDetails.productID)) {            isPremium = true;            await controller.setPremium(true);            return;          }        }      },      onDone: () {},      onError: (error) {        print("Purchase stream error: $error");      },    );    await InAppPurchase.instance.restorePurchases();  }  Future<void> markPremiumFalse() async {    isPremium = false;    await controller.setPremium(false);  }}