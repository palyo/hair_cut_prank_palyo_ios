import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'package:prankers/adModule/AdManager.dart';import 'package:prankers/adModule/InterAd.dart';import 'package:prankers/adModule/NativeShimmer.dart';import 'package:prankers/adModule/OnboardingNativeAd.dart';import 'package:prankers/extensions/app_colors.dart';import 'package:prankers/extensions/app_text_styles.dart';import 'package:prankers/extensions/screen_size.dart';import 'package:prankers/languages/I10n/app_localizations.dart';import 'package:prankers/provider/LifecycleHandler.dart';import 'package:prankers/provider/MainController.dart';import 'package:prankers/screens/ScreenCategory.dart';import 'package:prankers/screens/welcome/ScreenWelcome.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';class ScreenOnBoarding extends StatefulWidget {  const ScreenOnBoarding({super.key});  @override  State<ScreenOnBoarding> createState() => _ScreenOnBoardingState();}class _ScreenOnBoardingState extends State<ScreenOnBoarding> {  final LifecycleHandler _lifecycleHandler = LifecycleHandler();  final controller = Get.find<MainController>();  final PageController _controller = PageController();  int _currentPage = 0;  AdWidget? _adWidgets = null;  @override  void initState() {    super.initState();    _loadAd();    WidgetsBinding.instance.addPostFrameCallback((_) {      _lifecycleHandler.init(context);    });  }  @override  void dispose() {    _lifecycleHandler.dispose();    super.dispose();  }  void _loadAd() async {    if (controller.isPremium.value == false && AdManager.instance?.config?.isAdStatus == true) {      OnboardingNativeAd.instance.loadAdWithCallback((ad) {        if (mounted && ad != null) setState(() => _adWidgets = AdWidget(ad: ad));      });    }  }  Widget _buildImageWithText(BuildContext context, String asset, String text) {    return Column(      children: [        Expanded(child: Image.asset(asset, fit: BoxFit.fitHeight, width: context.screenWidth)),        Padding(          padding: EdgeInsets.all(12.sp),          child: Text(              text,              style: AppTextStyles.subheading2(context).copyWith(color: AppColors.accentText(context)),              textAlign: TextAlign.center,            ),        ),      ],    );  }  Widget _buildPage(BuildContext context, int index) {    final assetMap = ['assets/ic_onboarding_1.webp', 'assets/ic_onboarding_2.webp', 'assets/ic_onboarding_3.webp', 'assets/ic_onboarding_4.webp'];    final textMap = [      AppLocalizations.of(context)?.body_onboarding_1 ?? '',      AppLocalizations.of(context)?.body_onboarding_2 ?? '',      AppLocalizations.of(context)?.body_onboarding_3 ?? '',      AppLocalizations.of(context)?.body_onboarding_4 ?? '',    ];    return _buildImageWithText(context, assetMap[index], textMap[index]);  }  void _handleNextTap() {    if (_currentPage < 3) {      _controller.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.easeInOut);    } else {      InterAd().showInitialFlowAd(context, () {        Get.off(() => const ScreenWelcome());      });    }  }  @override  Widget build(BuildContext context) {    return Obx(() {      final isAdUser = controller.isPremium.value == false && AdManager.instance?.config?.isAdStatus == true;      final pageCount = 4;      return Scaffold(        backgroundColor: AppColors.categoryCard,        body: Column(          children: [            Expanded(              child: PageView.builder(                controller: _controller,                physics: const ClampingScrollPhysics(),                itemCount: pageCount,                onPageChanged: (index) => setState(() => _currentPage = index),                itemBuilder: (context, index) => _buildPage(context, index),              ),            ),            TextButton(              onPressed: _handleNextTap,              style: TextButton.styleFrom(                foregroundColor: AppColors.accentText(context).withAlpha(25),                backgroundColor: Colors.transparent,                padding: EdgeInsets.symmetric(horizontal: 12.sp, vertical: 12.sp),              ),              child: Text(                AppLocalizations.of(context)?.action_next ?? 'Next',                style: AppTextStyles.bodyText2(context).copyWith(color: AppColors.accentText(context), fontWeight: FontWeight.w600),              ),            ),                        SizedBox(height: 12.sp),            Padding(              padding: EdgeInsets.only(top: 6.sp, bottom: 12.sp),              child: SmoothPageIndicator(                controller: _controller,                count: pageCount,                effect: WormEffect(                  dotHeight: 10.sp,                  dotWidth: 10.sp,                  dotColor: AppColors.accentText(context).withAlpha(35),                  activeDotColor: AppColors.accentText(context),                ),              ),            ),            SizedBox(height: 12.sp),            if (isAdUser) ...[SizedBox(height: 265, child: _adWidgets ?? buildOnboardingAd(context))],            Container(height: MediaQuery.of(context).padding.bottom, color: AppColors.card(context)),          ],        ),      );    });  }}