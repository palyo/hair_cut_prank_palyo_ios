import 'dart:convert';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'package:package_info_plus/package_info_plus.dart';import 'package:shared_preferences/shared_preferences.dart';import 'AdConfig.dart';class AdManager {  static AdManager? _instance;  List<NativeAd> _nativeFullList = <NativeAd>[];  List<NativeAd> _nativeLanguageList = <NativeAd>[];  List<NativeAd> _nativeOnboardingList = <NativeAd>[];  AdManager._();  static AdManager? get instance {    _instance ??= AdManager._();    return _instance;  }  String nativeId = 'ca-app-pub-3940256099942544/3986624511';  List<NativeAd> get nativeFullList => _nativeFullList;  set nativeFullList(List<NativeAd> value) => _nativeFullList = value;  List<NativeAd> get nativeOnboardingList => _nativeOnboardingList;  set nativeOnboardingList(List<NativeAd> value) => _nativeOnboardingList = value;  List<NativeAd> get nativeLanguageList => _nativeLanguageList;  set nativeLanguageList(List<NativeAd> value) => _nativeLanguageList = value;  AdConfig? _config;  AdConfig? get config => _config;  set config(AdConfig? value) => _config = value;  void setAdConfig(AdConfig? config) async {    PackageInfo packageInfo = await PackageInfo.fromPlatform();    String versionName = packageInfo.version;    if (config?.versionCode?.split(',').contains(versionName) == true) {      config?.isAdStatus = false;    }    print(versionName);    print(config?.versionCode);    print('${config?.isAdStatus}');    _config = config;    String jsonStr = jsonEncode(config?.toJson());    SharedPreferences prefs = await SharedPreferences.getInstance();    await prefs.setString('ad_config', jsonStr);  }  Future<AdConfig?> getAdConfig() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    var json = prefs.getString('ad_config');    if (json != null) {      AdConfig savedConfig = AdConfig.fromJson(jsonDecode(json));      PackageInfo packageInfo = await PackageInfo.fromPlatform();      String versionName = packageInfo.version;      if (config?.versionCode?.split(',').contains(versionName) == true) {        savedConfig.isAdStatus = false;      }      return savedConfig;    } else {      return null;    }  }}