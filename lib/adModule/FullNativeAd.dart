import 'package:flutter/material.dart';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'AdManager.dart';class FullNativeAd {  BuildContext? context;  AdManager? adManager;  static FullNativeAd? _instance;  static FullNativeAd get instance => _instance ??= FullNativeAd._();  FullNativeAd._();  Future<void> init(BuildContext context) async {    this.context = context;    adManager = AdManager.instance;    AdManager.instance?.config ??= await AdManager.instance?.getAdConfig();    if (AdManager.instance?.config?.isAdStatus == false) {      return;    }    _preloadAdsIfNeeded();  }  void _preloadAdsIfNeeded()  {    int existingAds = adManager?.nativeFullList.length ?? 0;    int adsToLoad = 2 - existingAds;    for (int i = 0; i < adsToLoad; i++) {      _loadNativeAd();    }  }  void _loadNativeAd() {    final nativeAd = NativeAd(      adUnitId: adManager?.nativeId ?? "",      factoryId: 'fullNative',      request: const AdRequest(),      listener: NativeAdListener(        onAdLoaded: (ad) {          debugPrint("Native Ad Loaded");          adManager?.nativeFullList.add(ad as NativeAd);        },        onAdFailedToLoad: (ad, error) {          debugPrint("Native Ad Failed: ${error.message}");          ad.dispose();        },      ),    );    nativeAd.load();  }  bool isNativeAvailable() {    return (adManager?.nativeFullList.isNotEmpty ?? false);  }  NativeAd? getNativeAd() {    if (adManager?.nativeFullList.isNotEmpty ?? false) {      final ad = adManager!.nativeFullList.removeAt(0);      _preloadAdsIfNeeded();      return ad;    }    return null;  }  void loadAdWithCallback(Function(NativeAd?) onLoaded) {    final preloadedAd = getNativeAd();    if (preloadedAd != null) {      onLoaded(preloadedAd);      return;    }    final fallbackAd = NativeAd(      adUnitId: adManager?.nativeId ?? "",      factoryId: 'fullNative',      request: const AdRequest(),      listener: NativeAdListener(        onAdLoaded: (ad) {          debugPrint("Fallback Native Ad Loaded");          onLoaded(ad as NativeAd);        },        onAdFailedToLoad: (ad, error) {          debugPrint("Fallback Native Ad Failed: ${error.message}");          ad.dispose();          onLoaded(null); // handle failure        },      ),    );    fallbackAd.load();  }}