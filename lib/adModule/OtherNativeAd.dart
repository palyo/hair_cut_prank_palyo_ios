import 'package:flutter/material.dart';import 'package:google_mobile_ads/google_mobile_ads.dart';import 'AdManager.dart';class OtherNativeAd {  BuildContext? context;  AdManager? adManager;  static OtherNativeAd? _instance;  static OtherNativeAd get instance => _instance ??= OtherNativeAd._();  OtherNativeAd._();  Future<void> init(BuildContext context) async {    this.context = context;    adManager = AdManager.instance;    AdManager.instance?.config ??= await AdManager.instance?.getAdConfig();    if (AdManager.instance?.config?.isAdStatus == false) {      return;    }  }  void loadSmallAdWithCallback(Function(NativeAd?) onLoaded) {    final fallbackAd = NativeAd(      adUnitId: adManager?.nativeId ?? "",      factoryId: 'smallNative',      request: const AdRequest(),      listener: NativeAdListener(        onAdLoaded: (ad) {          debugPrint("Fallback Native Ad Loaded");          onLoaded(ad as NativeAd);        },        onAdFailedToLoad: (ad, error) {          debugPrint("Fallback Native Ad Failed: ${error.message}");          ad.dispose();          onLoaded(null); // handle failure        },      ),    );    fallbackAd.load();  }  void loadMediumAdWithCallback(Function(NativeAd?) onLoaded) {    final fallbackAd = NativeAd(      adUnitId: adManager?.nativeId ?? "",      factoryId: 'mediumNative',      request: const AdRequest(),      listener: NativeAdListener(        onAdLoaded: (ad) {          debugPrint("Fallback Native Ad Loaded");          onLoaded(ad as NativeAd);        },        onAdFailedToLoad: (ad, error) {          debugPrint("Fallback Native Ad Failed: ${error.message}");          ad.dispose();          onLoaded(null); // handle failure        },      ),    );    fallbackAd.load();  }}